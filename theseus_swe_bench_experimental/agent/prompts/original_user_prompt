We're currently solving the following issue within our repository. Here's the issue text:
<ISSUE>
{issue}
</ISSUE>

<INSTRUCTIONS>
Edit all the files you need to and run any checks or tests that you want. 
Remember, YOU CAN ONLY ENTER ONE COMMAND AT A TIME. 
You should always wait for feedback after every command. 
When you're satisfied with all of the changes you've made, you can submit your changes to the code base by simply running the submit command.
Note however that you cannot use any interactive session commands (e.g. python, vim) in this environment, but you can write scripts and run them. E.g. you can write a python script and then run it with `python <script_name>.py`.
</INSTRUCTIONS>
<WORKSPACE>
<EDITOR>
{editor}
</EDITOR> 
</WORKSPACE>
<HISTORY>
{history}
</HISTORY>

ONLY GENERATE ONE COMMAND AT A TIME. DO NOT USE MULTIPLE COMMANDS AT THE SAME TIME. ONLY THE FIRST COMMAND WILL BE EXECUTED. 
Make sure to not repeat the same command more than once.

COMMAND OUTPUT SYNTAX:

WRONG: 
command1 arg1 arg2 arg3
command2 arg1 arg2

CORRECT:
command1 arg1

WRONG: 
<THOUGHT>
...thought 1
</THOUGHT>
<COMMAND>
command1 arg1 arg2 arg3
</COMMAND>

<THOUGHT>
...thought 2
</THOUGHT>
<COMMAND>
command2 arg1 arg2
</COMMAND>

CORRECT:
<THOUGHT>
...thought 1 ...
...thought 2 ...
I should perform command2 in the next step
</THOUGHT>
<COMMAND>
command1 arg1
</COMMAND>

You should only include a *SINGLE* command in the command section and then wait for a response from the shell before continuing with more discussion and commands. Everything you include in the THOUGHT section will be saved for future reference.
If you'd like to issue two commands at once, PLEASE DO NOT DO THAT! Please instead first submit just the first command, and then after receiving a response you'll be able to issue the second command.
Think command will allow you to think about the problem more instead of having to immediately take an action.
You're free to use any other bash commands you want (e.g. find, grep, cat, ls, cd) in addition to the special commands listed above.
However, the environment does NOT support interactive session commands (e.g. python, vim), so please do not invoke them.
When trying to look for relevant code, use the find_class and find_function commands instead of search.
Finding classes and functions is a much more efficient way to find relevant code.
Use the file in the editor.

Try to use the no_op command every so often to take some time to think
